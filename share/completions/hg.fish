
#
# Completions for the hg command (Mercurial)
# This file was autogenerated by the file make_mercurial_completions.fish
# which is shipped with the fish source code
#

#
# subcommands
#

complete -c hg -n '__fish_use_subcommand' -x -a add --description 'add the specified files on the next commit'
complete -c hg -n '__fish_use_subcommand' -x -a annotate --description 'show changeset information per file line'
complete -c hg -n '__fish_use_subcommand' -x -a archive --description 'create unversioned archive of a repository revision'
complete -c hg -n '__fish_use_subcommand' -x -a backout --description 'reverse effect of earlier changeset'
complete -c hg -n '__fish_use_subcommand' -x -a bundle --description 'create a changegroup file'
complete -c hg -n '__fish_use_subcommand' -x -a cat --description 'output the latest or given revisions of files'
complete -c hg -n '__fish_use_subcommand' -x -a clone --description 'make a copy of an existing repository'
complete -c hg -n '__fish_use_subcommand' -x -a commit --description 'commit the specified files or all outstanding changes'
complete -c hg -n '__fish_use_subcommand' -x -a copy --description 'mark files as copied for the next commit'
complete -c hg -n '__fish_use_subcommand' -x -a diff --description 'diff repository (or selected files)'
complete -c hg -n '__fish_use_subcommand' -x -a export --description 'dump the header and diffs for one or more changesets'
complete -c hg -n '__fish_use_subcommand' -x -a grep --description 'search for a pattern in specified files and revisions'
complete -c hg -n '__fish_use_subcommand' -x -a heads --description 'show current repository heads'
complete -c hg -n '__fish_use_subcommand' -x -a help --description 'show help for a command, extension, or list of commands'
complete -c hg -n '__fish_use_subcommand' -x -a identify --description 'print information about the working copy'
complete -c hg -n '__fish_use_subcommand' -x -a import --description 'import an ordered set of patches'
complete -c hg -n '__fish_use_subcommand' -x -a incoming --description 'show new changesets found in source'
complete -c hg -n '__fish_use_subcommand' -x -a init --description 'create a new repository in the given directory'
complete -c hg -n '__fish_use_subcommand' -x -a locate --description 'locate files matching specific patterns'
complete -c hg -n '__fish_use_subcommand' -x -a log --description 'show revision history of entire repository or files'
complete -c hg -n '__fish_use_subcommand' -x -a manifest --description 'output the latest or given revision of the project manifest'
complete -c hg -n '__fish_use_subcommand' -x -a merge --description 'Merge working directory with another revision'
complete -c hg -n '__fish_use_subcommand' -x -a outgoing --description 'show changesets not found in destination'
complete -c hg -n '__fish_use_subcommand' -x -a parents --description 'show the parents of the working dir or revision'
complete -c hg -n '__fish_use_subcommand' -x -a paths --description 'show definition of symbolic path names'
complete -c hg -n '__fish_use_subcommand' -x -a pull --description 'pull changes from the specified source'
complete -c hg -n '__fish_use_subcommand' -x -a push --description 'push changes to the specified destination'
complete -c hg -n '__fish_use_subcommand' -x -a recover --description 'roll back an interrupted transaction'
complete -c hg -n '__fish_use_subcommand' -x -a remove --description 'remove the specified files on the next commit'
complete -c hg -n '__fish_use_subcommand' -x -a rename --description 'rename files; equivalent of copy + remove'
complete -c hg -n '__fish_use_subcommand' -x -a revert --description 'revert files or dirs to their states as of some revision'
complete -c hg -n '__fish_use_subcommand' -x -a rollback --description 'roll back the last transaction in this repository'
complete -c hg -n '__fish_use_subcommand' -x -a root --description 'print the root (top) of the current working dir'
complete -c hg -n '__fish_use_subcommand' -x -a serve --description 'export the repository via HTTP'
complete -c hg -n '__fish_use_subcommand' -x -a status --description 'show changed files in the working directory'
complete -c hg -n '__fish_use_subcommand' -x -a tag --description 'add a tag for the current tip or a given revision'
complete -c hg -n '__fish_use_subcommand' -x -a tags --description 'list repository tags'
complete -c hg -n '__fish_use_subcommand' -x -a tip --description 'show the tip revision'
complete -c hg -n '__fish_use_subcommand' -x -a unbundle --description 'apply a changegroup file'
complete -c hg -n '__fish_use_subcommand' -x -a update --description 'update or merge working directory'
complete -c hg -n '__fish_use_subcommand' -x -a verify --description 'verify the integrity of the repository'
complete -c hg -n '__fish_use_subcommand' -x -a version --description 'output version and copyright information'


#
# Completions for the 'add' subcommand
#

complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'
complete -c hg -s n -l dry-run --description 'do not perform actions, just print output'


#
# Completions for the 'annotate' subcommand
#

complete -c hg -s r -l rev --description 'annotate the specified revision'
complete -c hg -s a -l text --description 'treat all files as text'
complete -c hg -s u -l user --description 'list the author'
complete -c hg -s d -l date --description 'list the date'
complete -c hg -s n -l number --description 'list the revision number (default)'
complete -c hg -s c -l changeset --description 'list the changeset'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'


#
# Completions for the 'archive' subcommand
#

complete -c hg -s p -l prefix --description 'directory prefix for files in archive'
complete -c hg -s r -l rev --description 'revision to distribute'
complete -c hg -s t -l type --description 'type of distribution to create'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'
complete -c hg -l no-decode --description 'do not pass files through decoders'


#
# Completions for the 'backout' subcommand
#

complete -c hg -s m -l message --description 'use <text> as commit message'
complete -c hg -s l -l logfile --description 'read commit message from <file>'
complete -c hg -s d -l date --description 'record datecode as commit date'
complete -c hg -s u -l user --description 'record user as committer'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'
complete -c hg -l merge --description 'merge with old dirstate parent after backout'
complete -c hg -l parent --description 'parent to choose when backing out merge'


#
# Completions for the 'bundle' subcommand
#

complete -c hg -s f -l force --description 'run even when remote repository is unrelated'


#
# Completions for the 'cat' subcommand
#

complete -c hg -s o -l output --description 'print output to file with formatted name'
complete -c hg -s r -l rev --description 'print the given revision'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'


#
# Completions for the 'clone' subcommand
#

complete -c hg -s U -l noupdate --description 'do not update the new working directory'
complete -c hg -s r -l rev --description 'a changeset you would like to have after cloning'
complete -c hg -s e -l ssh --description 'specify ssh command to use'
complete -c hg -l pull --description 'use pull protocol to copy metadata'
complete -c hg -l uncompressed --description 'use uncompressed transfer (fast over LAN)'
complete -c hg -l remotecmd --description 'specify hg command to run on the remote side'


#
# Completions for the 'commit' subcommand
#

complete -c hg -s A -l addremove --description 'mark new/missing files as added/removed before committing'
complete -c hg -s m -l message --description 'use <text> as commit message'
complete -c hg -s l -l logfile --description 'read the commit message from <file>'
complete -c hg -s d -l date --description 'record datecode as commit date'
complete -c hg -s u -l user --description 'record user as commiter'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'


#
# Completions for the 'copy' subcommand
#

complete -c hg -s A -l after --description 'record a copy that has already occurred'
complete -c hg -s f -l force --description 'forcibly copy over an existing managed file'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'
complete -c hg -s n -l dry-run --description 'do not perform actions, just print output'


#
# Completions for the 'diff' subcommand
#

complete -c hg -s r -l rev --description 'revision'
complete -c hg -s a -l text --description 'treat all files as text'
complete -c hg -s p -l show-function --description 'show which function each change is in'
complete -c hg -s w -l ignore-all-space --description 'ignore white space when comparing lines'
complete -c hg -s b -l ignore-space-change --description 'ignore changes in the amount of white space'
complete -c hg -s B -l ignore-blank-lines --description 'ignore changes whose lines are all blank'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'


#
# Completions for the 'export' subcommand
#

complete -c hg -s o -l output --description 'print output to file with formatted name'
complete -c hg -s a -l text --description 'treat all files as text'
complete -c hg -l switch-parent --description 'diff against the second parent'


#
# Completions for the 'grep' subcommand
#

complete -c hg -s 0 -l print0 --description 'end fields with NUL'
complete -c hg -s i -l ignore-case --description 'ignore case when matching'
complete -c hg -s l -l files-with-matches --description 'print only filenames and revs that match'
complete -c hg -s n -l line-number --description 'print matching line numbers'
complete -c hg -s r -l rev --description 'search in given revision range'
complete -c hg -s u -l user --description 'print user who committed change'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'
complete -c hg -l all --description 'print all revisions that match'


#
# Completions for the 'heads' subcommand
#

complete -c hg -s b -l branches --description 'show branches'
complete -c hg -s r -l rev --description 'show only heads which are descendants of rev'
complete -c hg -l style --description 'display using template map file'
complete -c hg -l template --description 'display with template'


#
# Completions for the 'help' subcommand
#



#
# Completions for the 'identify' subcommand
#



#
# Completions for the 'import' subcommand
#

complete -c hg -s p -l strip --description 'directory strip option for patch. This has the same'
complete -c hg -s m -l message --description 'use <text> as commit message'
complete -c hg -s b -l base --description 'base path'
complete -c hg -s f -l force --description 'skip check for outstanding uncommitted changes'


#
# Completions for the 'incoming' subcommand
#

complete -c hg -s M -l no-merges --description 'do not show merges'
complete -c hg -s f -l force --description 'run even when remote repository is unrelated'
complete -c hg -s n -l newest-first --description 'show newest record first'
complete -c hg -s p -l patch --description 'show patch'
complete -c hg -s r -l rev --description 'a specific revision you would like to pull'
complete -c hg -s e -l ssh --description 'specify ssh command to use'
complete -c hg -l style --description 'display using template map file'
complete -c hg -l bundle --description 'file to store the bundles into'
complete -c hg -l template --description 'display with template'
complete -c hg -l remotecmd --description 'specify hg command to run on the remote side'


#
# Completions for the 'init' subcommand
#

complete -c hg -s e -l ssh --description 'specify ssh command to use'
complete -c hg -l remotecmd --description 'specify hg command to run on the remote side'


#
# Completions for the 'locate' subcommand
#

complete -c hg -s r -l rev --description 'search the repository as it stood at rev'
complete -c hg -s 0 -l print0 --description 'end filenames with NUL, for use with xargs'
complete -c hg -s f -l fullpath --description 'print complete paths from the filesystem root'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'


#
# Completions for the 'log' subcommand
#

complete -c hg -s b -l branches --description 'show branches'
complete -c hg -s k -l keyword --description 'search for a keyword'
complete -c hg -s l -l limit --description 'limit number of changes displayed'
complete -c hg -s r -l rev --description 'show the specified revision or range'
complete -c hg -s M -l no-merges --description 'do not show merges'
complete -c hg -s m -l only-merges --description 'show only merges'
complete -c hg -s p -l patch --description 'show patch'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'
complete -c hg -l style --description 'display using template map file'
complete -c hg -l template --description 'display with template'


#
# Completions for the 'manifest' subcommand
#



#
# Completions for the 'merge' subcommand
#

complete -c hg -s b -l branch --description 'merge with head of a specific branch'
complete -c hg -s f -l force --description 'force a merge with outstanding changes'


#
# Completions for the 'outgoing' subcommand
#

complete -c hg -s M -l no-merges --description 'do not show merges'
complete -c hg -s f -l force --description 'run even when remote repository is unrelated'
complete -c hg -s p -l patch --description 'show patch'
complete -c hg -s r -l rev --description 'a specific revision you would like to push'
complete -c hg -s n -l newest-first --description 'show newest record first'
complete -c hg -s e -l ssh --description 'specify ssh command to use'
complete -c hg -l style --description 'display using template map file'
complete -c hg -l template --description 'display with template'
complete -c hg -l remotecmd --description 'specify hg command to run on the remote side'


#
# Completions for the 'parents' subcommand
#

complete -c hg -s b -l branches --description 'show branches'
complete -c hg -s r -l rev --description 'show parents from the specified rev'
complete -c hg -l style --description 'display using template map file'
complete -c hg -l template --description 'display with template'


#
# Completions for the 'paths' subcommand
#



#
# Completions for the 'pull' subcommand
#

complete -c hg -s u -l update --description 'update the working directory to tip after pull'
complete -c hg -s e -l ssh --description 'specify ssh command to use'
complete -c hg -s f -l force --description 'run even when remote repository is unrelated'
complete -c hg -s r -l rev --description 'a specific revision you would like to pull'
complete -c hg -l remotecmd --description 'specify hg command to run on the remote side'


#
# Completions for the 'push' subcommand
#

complete -c hg -s f -l force --description 'force push'
complete -c hg -s e -l ssh --description 'specify ssh command to use'
complete -c hg -s r -l rev --description 'a specific revision you would like to push'
complete -c hg -l remotecmd --description 'specify hg command to run on the remote side'


#
# Completions for the 'recover' subcommand
#



#
# Completions for the 'remove' subcommand
#

complete -c hg -s A -l after --description 'record remove that has already occurred'
complete -c hg -s f -l force --description 'remove file even if modified'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'


#
# Completions for the 'rename' subcommand
#

complete -c hg -s A -l after --description 'record a rename that has already occurred'
complete -c hg -s f -l force --description 'forcibly copy over an existing managed file'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'
complete -c hg -s n -l dry-run --description 'do not perform actions, just print output'


#
# Completions for the 'revert' subcommand
#

complete -c hg -s r -l rev --description 'revision to revert to'
complete -c hg -s I -l include --description 'include names matching given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching given patterns'
complete -c hg -s n -l dry-run --description 'do not perform actions, just print output'
complete -c hg -l no-backup --description 'do not save backup copies of files'


#
# Completions for the 'rollback' subcommand
#



#
# Completions for the 'root' subcommand
#



#
# Completions for the 'serve' subcommand
#

complete -c hg -s A -l accesslog --description 'name of access log file to write to'
complete -c hg -s d -l daemon --description 'run server in background'
complete -c hg -s E -l errorlog --description 'name of error log file to write to'
complete -c hg -s p -l port --description 'port to use (default: 8000)'
complete -c hg -s a -l address --description 'address to use'
complete -c hg -s n -l name --description 'name to show in web pages (default: working dir)'
complete -c hg -s t -l templates --description 'web templates to use'
complete -c hg -s 6 -l ipv6 --description 'use IPv6 in addition to IPv4'
complete -c hg -l daemon-pipefds --description 'used internally by daemon mode'
complete -c hg -l webdir-conf --description 'name of the webdir config file (serve more than one repo)'
complete -c hg -l pid-file --description 'name of file to write process ID to'
complete -c hg -l stdio --description 'for remote clients'
complete -c hg -l style --description 'template style to use'


#
# Completions for the 'status' subcommand
#

complete -c hg -s m -l modified --description 'show only modified files'
complete -c hg -s a -l added --description 'show only added files'
complete -c hg -s r -l removed --description 'show only removed files'
complete -c hg -s d -l deleted --description 'show only deleted (but tracked) files'
complete -c hg -s u -l unknown --description 'show only unknown (not tracked) files'
complete -c hg -s i -l ignored --description 'show ignored files'
complete -c hg -s n -l no-status --description 'hide status prefix'
complete -c hg -s C -l copies --description 'show source of copied files'
complete -c hg -s 0 -l print0 --description 'end filenames with NUL, for use with xargs'
complete -c hg -s I -l include --description 'include names matching the given patterns'
complete -c hg -s X -l exclude --description 'exclude names matching the given patterns'


#
# Completions for the 'tag' subcommand
#

complete -c hg -s l -l local --description 'make the tag local'
complete -c hg -s m -l message --description 'message for tag commit log entry'
complete -c hg -s d -l date --description 'record datecode as commit date'
complete -c hg -s u -l user --description 'record user as commiter'
complete -c hg -s r -l rev --description 'revision to tag'


#
# Completions for the 'tags' subcommand
#



#
# Completions for the 'tip' subcommand
#

complete -c hg -s b -l branches --description 'show branches'
complete -c hg -s p -l patch --description 'show patch'
complete -c hg -l style --description 'display using template map file'
complete -c hg -l template --description 'display with template'


#
# Completions for the 'unbundle' subcommand
#

complete -c hg -s u -l update --description 'update the working directory to tip after unbundle'


#
# Completions for the 'update' subcommand
#

complete -c hg -s b -l branch --description 'checkout the head of a specific branch'
complete -c hg -s m -l merge --description 'allow merging of branches (DEPRECATED)'
complete -c hg -s C -l clean --description 'overwrite locally modified files'
complete -c hg -s f -l force --description 'force a merge with outstanding changes'


#
# Completions for the 'verify' subcommand
#



#
# Completions for the 'version' subcommand
#

